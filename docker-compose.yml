# docker-compose.yml
name: assistchat
services:
  web:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: assistchat-api
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - "./:/app"
    command: uvicorn src.app.main:app --app-dir /app --host 0.0.0.0 --port 8000
    depends_on:
      - db
    restart: unless-stopped


  migrate:
    image: assistchat-api
    env_file: .env
    volumes:
      - "./:/app"
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - >
        alembic upgrade head
    restart: "no"


  tg_user:
    image: assistchat-api           # тот же образ, что у web (смотри docker compose ps)
    command: python -u scripts/tg_user_dm_responder.py
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app                     # поставь такой же volumes, как у web
    restart: unless-stopped
    # без ports — это не http-сервис


  db:
    image: postgres:16.9
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - assistchat_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

volumes:
  assistchat_db:
    external: true
