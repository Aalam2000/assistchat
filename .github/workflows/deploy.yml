name: Deploy to Server

on:
  push:
    branches:
      - master  # Автодеплой только при пуше в master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup known_hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on remote host (SSH)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd /var/www/assistchat/www

            git pull --rebase

            # Всегда парсим docker-compose с .env, чтобы были DB_*
            docker compose --env-file .env pull db
            docker compose --env-file .env build web

            docker compose --env-file .env up -d db

            # Ждём здоровья БД (healthcheck из docker-compose.yml)
            DB_CID=$(docker compose --env-file .env ps -q db)
            echo "Waiting for DB health..."
            until [ "$(docker inspect -f '{{.State.Health.Status}}' "$DB_CID")" = "healthy" ]; do sleep 1; done

            # Прогоняем миграции
            docker compose --env-file .env run --rm migrate

            # Поднимаем приложения
            docker compose --env-file .env up -d web tg_user

            # Чистим висячие образы
            docker image prune -f
